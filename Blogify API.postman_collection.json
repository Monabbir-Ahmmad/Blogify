{
	"info": {
		"_postman_id": "43aa7341-d77c-4727-9a28-b3614029dc10",
		"name": "Blogify API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Public api",
			"item": [
				{
					"name": "Auth",
					"item": [
						{
							"name": "Signup",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const res = JSON.parse(responseBody);\r",
											"\r",
											"if(pm.response.code < 400){\r",
											"    pm.collectionVariables.set(\"userId\", res.userId);\r",
											"    pm.collectionVariables.set(\"accessToken\", res.accessToken);\r",
											"    pm.collectionVariables.set(\"refreshToken\", res.refreshToken)\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Test Name\",\r\n    \"email\": \"monabbir.ahmmad@gmail.com\",\r\n    \"gender\": \"Male\",\r\n    \"birthDate\": \"2000-01-01\",\r\n    \"password\": \"12345Aa!\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API}}/auth/signup",
									"host": [
										"{{API}}"
									],
									"path": [
										"auth",
										"signup"
									]
								}
							},
							"response": [
								{
									"name": "Signup successful",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Test Name\",\r\n    \"email\": \"monabbir.ahmmad@gmail.com\",\r\n    \"gender\": \"Male\",\r\n    \"birthDate\": \"2000-01-01\",\r\n    \"password\": \"12345Aa!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API}}/auth/signup",
											"host": [
												"{{API}}"
											],
											"path": [
												"auth",
												"signup"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Set-Cookie",
											"value": "authorization=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlclR5cGUiOiJOb3JtYWwiLCJpYXQiOjE2ODQ0OTQ2NTIsImV4cCI6MTY4NDQ5NDk1Mn0.K4Kp3Gpo4RY_eQ8pJRPP81c7kPLxBT3fCUVtBnHBNos; Path=/; HttpOnly; SameSite=None"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "375"
										},
										{
											"key": "ETag",
											"value": "W/\"177-ESj2km/R3WCQPdiw2O+pjTjLOB8\""
										},
										{
											"key": "Date",
											"value": "Fri, 19 May 2023 11:10:52 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"userId\": 1,\n    \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlclR5cGUiOiJOb3JtYWwiLCJpYXQiOjE2ODQ0OTQ2NTIsImV4cCI6MTY4NTc5MDY1Mn0.0xxJWcOI9OUsFH362-3SMjpdI5MGB5nmlKBRE1Il0eU\",\n    \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlclR5cGUiOiJOb3JtYWwiLCJpYXQiOjE2ODQ0OTQ2NTIsImV4cCI6MTY4NDQ5NDk1Mn0.K4Kp3Gpo4RY_eQ8pJRPP81c7kPLxBT3fCUVtBnHBNos\"\n}"
								},
								{
									"name": "Signup fail: Fields validation failed",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{API}}/auth/signup",
											"host": [
												"{{API}}"
											],
											"path": [
												"auth",
												"signup"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "777"
										},
										{
											"key": "ETag",
											"value": "W/\"309-MA7DCd3N0/wSGUbEAysMzxjPY3Y\""
										},
										{
											"key": "Date",
											"value": "Fri, 19 May 2023 11:12:28 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"statusCode\": 400,\n    \"message\": \"Name is required. Email is required. Password is required. Gender is required. Date of birth is required.\",\n    \"stack\": \"Error: Name is required. Email is required. Password is required. Gender is required. Date of birth is required.\\n    at validationCheck (file:///D:/Code/Blogify/backend/src/middlewares/validation.middleware.js:19:7)\\n    at Layer.handle [as handle_request] (D:\\\\Code\\\\Blogify\\\\backend\\\\node_modules\\\\express\\\\lib\\\\router\\\\layer.js:95:5)\\n    at next (D:\\\\Code\\\\Blogify\\\\backend\\\\node_modules\\\\express\\\\lib\\\\router\\\\route.js:144:13)\\n    at middleware (D:\\\\Code\\\\Blogify\\\\backend\\\\node_modules\\\\express-validator\\\\src\\\\middlewares\\\\check.js:16:13)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\"\n}"
								},
								{
									"name": "Signup fail: Already signed in",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Test Name\",\r\n    \"email\": \"monabbir.ahmmad@gmail.com\",\r\n    \"gender\": \"Male\",\r\n    \"birthDate\": \"2000-01-01\",\r\n    \"password\": \"12345Aa!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API}}/auth/signup",
											"host": [
												"{{API}}"
											],
											"path": [
												"auth",
												"signup"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1164"
										},
										{
											"key": "ETag",
											"value": "W/\"48c-b2jlwSlxwHSsX98LEUQPMcjVm9k\""
										},
										{
											"key": "Date",
											"value": "Fri, 19 May 2023 11:11:18 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"statusCode\": 403,\n    \"message\": \"Already logged in. Please log out first.\",\n    \"stack\": \"Error: Already logged in. Please log out first.\\n    at checkLoggedin (file:///D:/Code/Blogify/backend/src/middlewares/auth.middleware.js:23:9)\\n    at Layer.handle [as handle_request] (D:\\\\Code\\\\Blogify\\\\backend\\\\node_modules\\\\express\\\\lib\\\\router\\\\layer.js:95:5)\\n    at next (D:\\\\Code\\\\Blogify\\\\backend\\\\node_modules\\\\express\\\\lib\\\\router\\\\route.js:144:13)\\n    at Route.dispatch (D:\\\\Code\\\\Blogify\\\\backend\\\\node_modules\\\\express\\\\lib\\\\router\\\\route.js:114:3)\\n    at Layer.handle [as handle_request] (D:\\\\Code\\\\Blogify\\\\backend\\\\node_modules\\\\express\\\\lib\\\\router\\\\layer.js:95:5)\\n    at D:\\\\Code\\\\Blogify\\\\backend\\\\node_modules\\\\express\\\\lib\\\\router\\\\index.js:284:15\\n    at Function.process_params (D:\\\\Code\\\\Blogify\\\\backend\\\\node_modules\\\\express\\\\lib\\\\router\\\\index.js:346:12)\\n    at next (D:\\\\Code\\\\Blogify\\\\backend\\\\node_modules\\\\express\\\\lib\\\\router\\\\index.js:280:10)\\n    at Function.handle (D:\\\\Code\\\\Blogify\\\\backend\\\\node_modules\\\\express\\\\lib\\\\router\\\\index.js:175:3)\\n    at router (D:\\\\Code\\\\Blogify\\\\backend\\\\node_modules\\\\express\\\\lib\\\\router\\\\index.js:47:12)\"\n}"
								}
							]
						},
						{
							"name": "Signout",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"userId\", null);\r",
											"pm.collectionVariables.set(\"accessToken\", null);\r",
											"pm.collectionVariables.set(\"refreshToken\", null);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{API}}/auth/signout",
									"host": [
										"{{API}}"
									],
									"path": [
										"auth",
										"signout"
									]
								}
							},
							"response": []
						},
						{
							"name": "Signin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const res = JSON.parse(responseBody);\r",
											"\r",
											"if(pm.response.code < 400){\r",
											"    pm.collectionVariables.set(\"userId\", res.userId);\r",
											"    pm.collectionVariables.set(\"accessToken\", res.accessToken);\r",
											"    pm.collectionVariables.set(\"refreshToken\", res.refreshToken)\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"monabbir.ahmmad@gmail.com\",\r\n    \"password\": \"12345Aa!\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API}}/auth/signin",
									"host": [
										"{{API}}"
									],
									"path": [
										"auth",
										"signin"
									]
								}
							},
							"response": []
						},
						{
							"name": "Refresh token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const res = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(\"accessToken\", res.accessToken);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"refreshToken\": \"{{refreshToken}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API}}/auth/refresh-token",
									"host": [
										"{{API}}"
									],
									"path": [
										"auth",
										"refresh-token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Forgot password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"monabbir.ahmmad@gmail.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API}}/auth/forgot-password",
									"host": [
										"{{API}}"
									],
									"path": [
										"auth",
										"forgot-password"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "API base",
					"request": {
						"auth": {
							"type": "bearer"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}",
							"host": [
								"{{baseURL}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Protected api",
			"item": [
				{
					"name": "User",
					"item": [
						{
							"name": "View profile",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API}}/user/{{userId}}",
									"host": [
										"{{API}}"
									],
									"path": [
										"user",
										"{{userId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update profile",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"User Name\",\r\n    \"email\": \"monabbir.ahmmad@gmail.com\",\r\n    \"gender\": \"Male\",\r\n    \"birthDate\": \"2000-01-01\",\r\n    \"bio\": \"This is my bio\",\r\n    \"password\": \"12345Aa!\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API}}/user/{{userId}}",
									"host": [
										"{{API}}"
									],
									"path": [
										"user",
										"{{userId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update password",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"oldPassword\": \"12345Aa!\",\r\n    \"newPassword\": \"12345Aa@\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API}}/user/password/{{userId}}",
									"host": [
										"{{API}}"
									],
									"path": [
										"user",
										"password",
										"{{userId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update profile image",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "profileImage",
											"type": "file",
											"src": "/C:/Users/Tajbir/Pictures/Screenshot 2023-05-08 152135.png"
										}
									],
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{API}}/user/profile-image/{{userId}}",
									"host": [
										"{{API}}"
									],
									"path": [
										"user",
										"profile-image",
										"{{userId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update cover image",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "coverImage",
											"type": "file",
											"src": "/C:/Users/Tajbir/Pictures/Screenshot 2023-05-08 152135.png"
										}
									],
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{API}}/user/cover-image/{{userId}}",
									"host": [
										"{{API}}"
									],
									"path": [
										"user",
										"cover-image",
										"{{userId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"userId\", null);\r",
											"pm.collectionVariables.set(\"accessToken\", null);\r",
											"pm.collectionVariables.set(\"refreshToken\", null);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"password\": \"12345Aa!\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API}}/user/{{userId}}",
									"host": [
										"{{API}}"
									],
									"path": [
										"user",
										"{{userId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Blog",
					"item": [
						{
							"name": "Create blog",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Random title",
											"description": "Required",
											"type": "default"
										},
										{
											"key": "content",
											"value": "Random content",
											"description": "Required",
											"type": "default"
										},
										{
											"key": "coverImage",
											"description": "Optional",
											"type": "file",
											"src": "/G:/Image/4k-gaming-wallpapers-19.jpg"
										}
									]
								},
								"url": {
									"raw": "{{API}}/blog/",
									"host": [
										"{{API}}"
									],
									"path": [
										"blog",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Get blog",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API}}/blog/1",
									"host": [
										"{{API}}"
									],
									"path": [
										"blog",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get blog list",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{API}}/blog/?limit=12&page=1",
									"host": [
										"{{API}}"
									],
									"path": [
										"blog",
										""
									],
									"query": [
										{
											"key": "limit",
											"value": "12",
											"description": "Default = 12"
										},
										{
											"key": "page",
											"value": "1",
											"description": "Default = 12"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get blogs by userId",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API}}/blog/user/{{userId}}?limit=12&page=1",
									"host": [
										"{{API}}"
									],
									"path": [
										"blog",
										"user",
										"{{userId}}"
									],
									"query": [
										{
											"key": "limit",
											"value": "12"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update blog",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Title",
											"description": "Optional",
											"type": "default"
										},
										{
											"key": "content",
											"value": "Content",
											"description": "Optional",
											"type": "default"
										},
										{
											"key": "coverImage",
											"description": "Optional file",
											"type": "file",
											"src": "/G:/Image/4k-multiple-game-wallpaper-3.jpg"
										}
									]
								},
								"url": {
									"raw": "{{API}}/blog/1",
									"host": [
										"{{API}}"
									],
									"path": [
										"blog",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Like blog",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{API}}/blog/like/1",
									"host": [
										"{{API}}"
									],
									"path": [
										"blog",
										"like",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete blog",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{API}}/blog/1",
									"host": [
										"{{API}}"
									],
									"path": [
										"blog",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Comment",
					"item": [
						{
							"name": "Post comment",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"blogId\": 1,\r\n    \"text\": \"Something\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API}}/comment/",
									"host": [
										"{{API}}"
									],
									"path": [
										"comment",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Get comment",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API}}/comment/1",
									"host": [
										"{{API}}"
									],
									"path": [
										"comment",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get blog comments",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API}}/comment/blog/1?limit=12&page=1",
									"host": [
										"{{API}}"
									],
									"path": [
										"comment",
										"blog",
										"1"
									],
									"query": [
										{
											"key": "limit",
											"value": "12"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get comment replies",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API}}/comment/reply/1?limit=12&page=1",
									"host": [
										"{{API}}"
									],
									"path": [
										"comment",
										"reply",
										"1"
									],
									"query": [
										{
											"key": "limit",
											"value": "12"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update comment",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"Something new\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API}}/comment/1",
									"host": [
										"{{API}}"
									],
									"path": [
										"comment",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Like comment",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{API}}/comment/like/1",
									"host": [
										"{{API}}"
									],
									"path": [
										"comment",
										"like",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete comment",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{API}}/comment/1",
									"host": [
										"{{API}}"
									],
									"path": [
										"comment",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Search",
					"item": [
						{
							"name": "Search users",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API}}/search/user/T?limit=12&page=1",
									"host": [
										"{{API}}"
									],
									"path": [
										"search",
										"user",
										"T"
									],
									"query": [
										{
											"key": "limit",
											"value": "12"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search blogs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API}}/search/blog/T?limit=12&page=1",
									"host": [
										"{{API}}"
									],
									"path": [
										"search",
										"blog",
										"T"
									],
									"query": [
										{
											"key": "limit",
											"value": "12"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{accessToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"const options = {",
							"    url: `${pm.collectionVariables.get(\"API\")}/auth/refresh-token`,",
							"    method: \"POST\",",
							"    header: {",
							"        \"Content-Type\": \"application/json\",",
							"    },",
							"    body: {",
							"        mode: \"raw\",",
							"        raw: JSON.stringify({",
							"            refreshToken: pm.collectionVariables.get(\"refreshToken\"),",
							"        }),",
							"    },",
							"};",
							"",
							"pm.sendRequest(options, (err, res) => {",
							"    if (res.json().accessToken)",
							"        pm.collectionVariables.set(\"accessToken\", res.json().accessToken);",
							"});"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "http://localhost:5000"
		},
		{
			"key": "API",
			"value": "http://localhost:5000/api"
		},
		{
			"key": "refreshToken",
			"value": "",
			"type": "default"
		},
		{
			"key": "accessToken",
			"value": "",
			"type": "default"
		},
		{
			"key": "userId",
			"value": "",
			"type": "default"
		}
	]
}